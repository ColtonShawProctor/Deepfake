apiVersion: apps/v1
kind: Deployment
metadata:
  name: deepfake-api
  namespace: deepfake-detection
  labels:
    app: deepfake-api
    version: v1
spec:
  replicas: 3
  selector:
    matchLabels:
      app: deepfake-api
  template:
    metadata:
      labels:
        app: deepfake-api
        version: v1
    spec:
      containers:
      - name: deepfake-api
        image: deepfake-detection:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 8000
          name: http
        env:
        - name: ENVIRONMENT
          valueFrom:
            configMapKeyRef:
              name: deepfake-config
              key: ENVIRONMENT
        - name: LOG_LEVEL
          valueFrom:
            configMapKeyRef:
              name: deepfake-config
              key: LOG_LEVEL
        - name: MAX_WORKERS
          valueFrom:
            configMapKeyRef:
              name: deepfake-config
              key: MAX_WORKERS
        - name: MODEL_CACHE_SIZE
          valueFrom:
            configMapKeyRef:
              name: deepfake-config
              key: MODEL_CACHE_SIZE
        - name: REDIS_URL
          valueFrom:
            configMapKeyRef:
              name: deepfake-config
              key: REDIS_URL
        - name: DATABASE_URL
          valueFrom:
            configMapKeyRef:
              name: deepfake-config
              key: DATABASE_URL
        - name: SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: deepfake-secrets
              key: SECRET_KEY
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: deepfake-secrets
              key: DB_PASSWORD
        resources:
          requests:
            memory: "2Gi"
            cpu: "1000m"
          limits:
            memory: "4Gi"
            cpu: "2000m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        volumeMounts:
        - name: uploads-volume
          mountPath: /app/uploads
        - name: models-volume
          mountPath: /app/models
        - name: logs-volume
          mountPath: /app/logs
      volumes:
      - name: uploads-volume
        persistentVolumeClaim:
          claimName: uploads-pvc
      - name: models-volume
        persistentVolumeClaim:
          claimName: models-pvc
      - name: logs-volume
        persistentVolumeClaim:
          claimName: logs-pvc
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 1000 